@page "/genre/{GenreId:int}"
@using BookTracker.Shared.Models.Genre
@inject HttpClient http
@inject NavigationManager navigation
@attribute [Authorize]

<h3>Genre @genre.Id </h3>

@if (genre != null)
{
    <div class="container">
        <dl class="row">
         <dt class = "col-sm-2">
            <span>Genre Id:</span>
        </dt>
        <dd class = "col-sm-10">
            <span>@genre.Id</span>
        </dd>
        <dt class = "col-sm-2">
            <span>Name:</span>
        </dt>
        <dd class = "col-sm-10">
            <span>@genre.Name</span>
        </dd>
            
        </dl>

        <div class="d-flex justify-content-center mt-3">
            <div class="text-center justify-content-between w-25">
                <a href=@($"/genre/edit/{GenreId}") class="btn btn-outline-primary">Edit</a>
                <a href=@($"/genre/delete/{GenreId}") class="btn btn-outline-danger">Delete</a>
                <hr/>
                <a href="/genre">Back to Genre Index</a>
            </div>

        </div>


    </div>

}
else
{
    <p>Loading...</p>
}




@code {
     [Parameter]

    public int GenreId { get; set; }

    private GenreDetail genre = new();

    private string errorMessage;

     protected override async Task OnInitializedAsync()
    {
        genre = await http.GetFromJsonAsync<GenreDetail>($"/api/genre/{GenreId}");

        
    }


}
@*Kind of useless right now, but created it for potential expansion i.e. showing a list of books associated to the genre or something*@
