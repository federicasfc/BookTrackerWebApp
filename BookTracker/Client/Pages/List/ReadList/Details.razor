@page "/readlist/{ListItemId:int}"
@using BookTracker.Shared.Models.List.ReadList
@inject HttpClient http
@inject NavigationManager navigation
@attribute [Authorize]

<h3>Read List: @listItem.BookTitle</h3>

@if(errorMessage != null)
{
    <h2 class="text-danger">@errorMessage</h2>
}

@if(listItem != null)
{
      <div class="container">
        <dl class="row">
         <dt class = "col-sm-2">
            <span>List Item Id:</span>
        </dt>
        <dd class = "col-sm-10">
            <span>@listItem.Id</span>
        </dd>
        <dt class = "col-sm-2">
            <span>Book Title:</span>
        </dt>
        <dd class = "col-sm-10">
            <span>@listItem.BookTitle</span>
        </dd>
         <dt class = "col-sm-2">
            <span>Date Added:</span>
        </dt>
        <dd class = "col-sm-10">
            <span>@listItem.AddedUtc</span>
        </dd>
         <dt class = "col-sm-2">
            <span>Date Acquired</span>
        </dt>
        <dd class = "col-sm-10">
            <span>@listItem.AcquiredUtc</span>
        </dd>
         <dt class = "col-sm-2">
            <span>Format</span>
        </dt>
        <dd class = "col-sm-10">
            <span>@listItem.Format</span>
        </dd>
         <dt class = "col-sm-2">
            <span>How Acquired</span>
        </dt>
        <dd class = "col-sm-10">
            <span>@listItem.HowAcquired</span>
        </dd>
        <dt class = "col-sm-2">
            <span>Date Started</span>
        </dt>
        <dd class = "col-sm-10">
            <span>@listItem.StartedUtc</span>
        </dd>
         <dt class = "col-sm-2">
            <span>Finished</span>
        </dt>
        <dd class = "col-sm-10">
            <span>@listItem.IsFinished</span>
        </dd>
         <dt class = "col-sm-2">
            <span>Review</span>
        </dt>
        <dd class = "col-sm-10">
            <span>@listItem.Review</span>
        </dd>
            
        </dl>
         <div class="d-flex justify-content-center mt-3">
            <div class="text-center justify-content-between w-25">
                <a href=@($"/readlist/remove/{ListItemId}") class="btn btn-outline-danger">Remove from Read List</a>
                <hr/>
                 <a href=@($"/book/{listItem.BookId}")>Book Details</a>
                <a href="/readlist">Back to Read List</a>
            </div>

        </div>
    </div>
    
}
else
{
    <p>Item not found</p>
}


@code {


    [Parameter]
    public int ListItemId { get; set; }

    private ReadListDetail listItem = new();

    

    private string errorMessage;

    protected override async Task OnInitializedAsync()
    {
        listItem = await http.GetFromJsonAsync<ReadListDetail>($"/api/readlist/{ListItemId}");

        

    }

}
